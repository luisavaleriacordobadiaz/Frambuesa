from grovepi import *
from grove_rgb_lcd import *
from time import sleep
from math import isnan
import mysql.connector

# Configuraci√≥n del sensor DHT
dht_sensor_port = 7
dht_sensor_type = 0 # DHT11
setRGB(0, 255, 0)

# Conexi√≥n a la base de datos MariaDB local
try:
conn = mysql.connector.connect(
host="localhost",    
user="root",    
password="",    
database="LECTURAS
)
cursor = conn.cursor()
except mysql.connector.Error as e:
print("‚ùå Error al conectar con la base de datos:", e)
exit(1)

# Bucle principal
try:
while True:
try:
# Leer del sensor
temp_hum = dht(dht_sensor_port, dht_sensor_type)
if isinstance(temp_hum, list) and len(temp_hum) == 2:
temp, hum = temp_hum

if isnan(temp) or isnan(hum):
print("‚ö†Ô∏è Lectura inv√°lida: NaN")
setText_norefresh("Esperado...\nSensor sin datos")
else:
print(f"‚úÖ Temp = {temp} ¬∞C\tHumedad = {hum} %")
setText_norefresh("Temp: {:.1f}C\nHumidity: {:.1f}%".format(temp, hum))

# Insertar en la tabla DATOS_RP
sql = "INSERT INTO DATOS_RP (temperatura, humedad) VALUES (%s, %s)"
try:
cursor.execute(sql, (temp, hum))
conn.commit()
except mysql.connector.Error as e:
print("‚ùå Error al guardar en la BD:", e)
else:
print("‚ö†Ô∏è Lectura corrupta del sensor")
setText_norefresh("Sensor con error")

except (IOError, TypeError) as e:
print("‚ö†Ô∏è Error del sensor:", e)
setText("Lectura\ninvalida")
sleep(2)

except KeyboardInterrupt:
print("üõë Programa interrumpido por el usuario.")
setText("Detenido\npor usuario")
break

sleep(5)

finally:
try:
cursor.close()
except:
pass

try:
conn.close()
except:
pass
